{
  "id": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Template",
  "description": "An Azure deployment template",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON schema reference"
    },
    "apiProfile": {
      "type": "string",
      "enum": [
        "2017-03-09-profile",
        "2018-03-01-hybrid",
        "2018-06-01-profile"
      ],
      "description": "The apiProfile to use for all resources in the template."
    },
    "contentVersion": {
      "type": "string",
      "pattern": "(^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$)",
      "description": "A 4 number format for the version number of this template file. For example, 1.0.0.0"
    },
    "variables": {
      "type": "object",
      "description": "Variable definitions"
    },
    "parameters": {
      "type": "object",
      "description": "Input parameter definitions",
      "additionalProperties": {
        "$ref": "#/definitions/parameter"
      }
    },
    "functions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/functionNamespace"
      },
      "description": "User defined functions"
    },
    "resources": {
      "type": "array",
      "description": "Collection of resources to be deployed",
      "items": {
        "$ref": "https://schema.management.azure.com/schemas/common/manualResources.json"
      }
    },
    "outputs": {
      "type": "object",
      "description": "Output parameter definitions",
      "additionalProperties": {
        "$ref": "#/definitions/output"
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "$schema",
    "contentVersion",
    "resources"
  ],
  "definitions": {
    "functionNamespace": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "minLength": 1,
          "description": "Function namespace"
        },
        "members": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/functionMember"
          },
          "description": "Function memebers"
        }
      }
    },
    "functionMember": {
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/functionParameter"
          },
          "description": "Function parameters"
        },
        "output": {
          "$ref": "#/definitions/functionOutput",
          "description": "Function output"
        }
      }
    },
    "functionParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Function parameter name"
        },
        "type": {
          "$ref": "#/definitions/parameterTypes",
          "description": "Type of function parameter value"
        }
      }
    },
    "functionOutput": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/parameterTypes",
          "description": "Type of function output value"
        },
        "value": {
          "$ref": "#/definitions/parameterValueTypes",
          "description": "Value assigned for function output"
        }
      }
    },
    "parameter": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/parameterTypes",
          "description": "Type of input parameter"
        },
        "defaultValue": {
          "$ref": "#/definitions/parameterValueTypes",
          "description": "Default value to be used if one is not provided"
        },
        "allowedValues": {
          "type": "array",
          "description": "Value can only be one of these values"
        },
        "metadata": {
          "type": "object",
          "description": "Metadata for the parameter, can be any valid JSON object"
        },
        "minValue": {
          "type": "integer",
          "description": "Minimum value for the int type parameter"
        },
        "maxValue": {
          "type": "integer",
          "description": "Maximum value for the int type parameter"
        },
        "minLength": {
          "type": "integer",
          "description": "Minimum length for the string or array type parameter"
        },
        "maxLength": {
          "type": "integer",
          "description": "Maximum length for the string or array type parameter"
        }
      },
      "required": [ "type" ],
      "description": "Input parameter definitions"
    },
    "keyVaultReference": {
      "type": "object",
      "properties": {
        "keyVault": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [ "id" ],
          "additionalProperties": false
        },
        "secretName": {
          "type": "string",
          "minLength": 1
        },
        "secretVersion": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "keyVault",
        "secretName"
      ],
      "additionalProperties": false
    },
    "output": {
      "type": "object",
      "properties": {
        "condition": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Condition of the output"
        },
        "type": {
          "$ref": "#/definitions/parameterTypes",
          "description": "Type of output value"
        },
        "value": {
          "$ref": "#/definitions/parameterValueTypes",
          "description": "Value assigned for output"
        }
      },
      "required": [ "type", "value" ],
      "description": "Set of output parameters"
    },
    "parameterTypes": {
      "enum": [ "string", "securestring", "int", "bool", "object", "secureObject", "array" ]
    },
    "parameterValueTypes": {
      "type": [ "string", "boolean", "integer", "number", "object", "array", "null" ]
    }
  }
}